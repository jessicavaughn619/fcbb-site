<?php

use Drupal\Component\Utility\Html;

// function fcbb_theme_theme($existing, $type, $theme, $path) {
//     $theme_path = Drupal::theme()->getActiveTheme()->getPath();
//     return [
//       'header_block' => [
//         // 'template' => 'global-header',
//         'variables' => [],
//         'path' => $theme_path . '/templates'
//       ],
//       'footer_block' => [
//         // 'template' => 'global-footer',
//         'variables' => [],
//         'path' => $theme_path . '/templates'
//       ],
//       'style_tile' => [
//         'template' => 'style-tile',
//         'variables' => [],
//         'path' => $theme_path . '/templates'
//       ],
//       'announcement_banner' => [
//         'template' => 'announcement-banner',
//         'variables' => [],
//         'path' => $theme_path . '/templates'
//       ]
//     ];
// }


/**
 * Alter styleguide elements.
 *
 * @param &$items
 *   An array of items to be displayed.
 *
 * @return
 *   No return value. Modify $items by reference.
 *
 * @see hook_styleguide()
 */
// function fcbb_theme_styleguide_alter(&$items) {

//     // // POST LAUNCH: unset most items so we can better proof our markup
//     // $headings_text = $items['headings_text'];
  
//     // foreach ($items as $k => $item) {
//     //   unset($items[$k]);
//     // }
  
//     // $items['headings_text'] = $headings_text;
//     $items['swatches'] = array(
//       'title' => t('Style Tile'),
//       'content' => [
//         '#theme' => 'style_tile',
//       ],
//       'group' => t('User interface Miles'),
//     );
//     // $items['table']['content']['#prefix'] = '<article>';
//     // $items['table']['content']['#suffix'] = '</article>';
// }
  

function fcbb_theme_preprocess_html(&$variables) {
    $variables['attributes']['class'][] = \Drupal::service('path.matcher')
        ->isFrontPage() ? 'frontpage' : 'not-front';
        $variables['google_fonts'] = fcbb_theme_google_fonts();
}

function fcbb_theme_preprocess_node(&$variables) {
    $node = $variables['node'];
    $current_node_type = $node->bundle();
    $variables['view_mode'] = $variables['elements']['#view_mode'];
    $variables['node'] = $variables['elements']['#node'];
    $variables['nid'] = $node->id();

    $variables['attributes']['class'][] = 'node';
    $variables['attributes']['class'][] = 'node-' . Html::cleanCssIdentifier($node->bundle());
    $variables['attributes']['class'][] = Html::cleanCssIdentifier($variables['view_mode']);
    $variables['attributes']['data-node-id'] = $node->id();
}

function fcbb_theme_google_fonts() {
    $fonts_url = 'https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900';

    $output = '<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />';
    $output .= '<link rel="preload" as="style" href="' . $fonts_url . '&display=swap" />';
    $output .= '<link rel="stylesheet" href="' . $fonts_url . '&display=swap" media="print" onload="this.media=\'all\'" />';
    $output .= '<noscript><link rel="stylesheet" href="' . $fonts_url . '&display=swap" /></noscript>';

    return $output;
}
